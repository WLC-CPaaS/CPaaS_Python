# coding: utf-8

"""
    White Label Communications CPaas API Documentation

    A CPaaS platform API

    The version of the OpenAPI document: 1.1
    Contact: support@whitelabelcomm.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, StrictBool, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class ServiceChannelOutput(BaseModel):
    """
    ServiceChannelOutput
    """ # noqa: E501
    answered: Optional[StrictBool] = None
    authorizing_id: Optional[StrictStr] = None
    authorizing_type: Optional[StrictStr] = None
    callflow_id: Optional[StrictStr] = None
    channel_authorized: Optional[StrictBool] = None
    custom_application_vars: Optional[Dict[str, Any]] = None
    custom_auth_headers: Optional[Dict[str, Any]] = None
    custom_channel_vars: Optional[Dict[str, Any]] = None
    custom_sip_headers: Optional[Dict[str, Any]] = None
    destination: Optional[StrictStr] = None
    direction: Optional[StrictStr] = None
    elapsed_s: Optional[StrictInt] = None
    from_tag: Optional[StrictStr] = None
    interaction_id: Optional[StrictStr] = None
    is_loopback: Optional[StrictBool] = None
    is_onhold: Optional[StrictBool] = None
    other_leg: Optional[StrictStr] = None
    owner_id: Optional[StrictStr] = None
    presence_id: Optional[StrictStr] = None
    request: Optional[StrictStr] = None
    reseller_id: Optional[StrictStr] = None
    timestamp: Optional[StrictInt] = None
    to_tag: Optional[StrictStr] = None
    username: Optional[StrictStr] = None
    uuid: Optional[StrictStr] = None
    __properties: ClassVar[List[str]] = ["answered", "authorizing_id", "authorizing_type", "callflow_id", "channel_authorized", "custom_application_vars", "custom_auth_headers", "custom_channel_vars", "custom_sip_headers", "destination", "direction", "elapsed_s", "from_tag", "interaction_id", "is_loopback", "is_onhold", "other_leg", "owner_id", "presence_id", "request", "reseller_id", "timestamp", "to_tag", "username", "uuid"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of ServiceChannelOutput from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of ServiceChannelOutput from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "answered": obj.get("answered"),
            "authorizing_id": obj.get("authorizing_id"),
            "authorizing_type": obj.get("authorizing_type"),
            "callflow_id": obj.get("callflow_id"),
            "channel_authorized": obj.get("channel_authorized"),
            "custom_application_vars": obj.get("custom_application_vars"),
            "custom_auth_headers": obj.get("custom_auth_headers"),
            "custom_channel_vars": obj.get("custom_channel_vars"),
            "custom_sip_headers": obj.get("custom_sip_headers"),
            "destination": obj.get("destination"),
            "direction": obj.get("direction"),
            "elapsed_s": obj.get("elapsed_s"),
            "from_tag": obj.get("from_tag"),
            "interaction_id": obj.get("interaction_id"),
            "is_loopback": obj.get("is_loopback"),
            "is_onhold": obj.get("is_onhold"),
            "other_leg": obj.get("other_leg"),
            "owner_id": obj.get("owner_id"),
            "presence_id": obj.get("presence_id"),
            "request": obj.get("request"),
            "reseller_id": obj.get("reseller_id"),
            "timestamp": obj.get("timestamp"),
            "to_tag": obj.get("to_tag"),
            "username": obj.get("username"),
            "uuid": obj.get("uuid")
        })
        return _obj


