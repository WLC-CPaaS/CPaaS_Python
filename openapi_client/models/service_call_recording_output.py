# coding: utf-8

"""
    White Label Communications CPaas API Documentation

    A CPaaS platform API

    The version of the OpenAPI document: 1.1
    Contact: support@whitelabelcomm.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class ServiceCallRecordingOutput(BaseModel):
    """
    ServiceCallRecordingOutput
    """ # noqa: E501
    call_id: Optional[StrictStr] = None
    callee_id_name: Optional[StrictStr] = None
    callee_id_number: Optional[StrictStr] = None
    caller_id_name: Optional[StrictStr] = None
    caller_id_number: Optional[StrictStr] = None
    cdr_id: Optional[StrictStr] = None
    content_type: Optional[StrictStr] = None
    custom_channel_vars: Optional[Dict[str, Any]] = None
    description: Optional[StrictStr] = None
    direction: Optional[StrictStr] = None
    duration: Optional[StrictInt] = None
    duration_ms: Optional[StrictInt] = None
    endpoint_id: Optional[StrictStr] = None
    var_from: Optional[StrictStr] = Field(default=None, alias="from")
    id: Optional[StrictStr] = None
    interaction_id: Optional[StrictStr] = None
    media_source: Optional[StrictStr] = None
    media_type: Optional[StrictStr] = None
    name: Optional[StrictStr] = None
    origin: Optional[StrictStr] = None
    owner_id: Optional[StrictStr] = None
    request: Optional[StrictStr] = None
    source_type: Optional[StrictStr] = None
    start: Optional[StrictInt] = None
    to: Optional[StrictStr] = None
    url: Optional[StrictStr] = None
    __properties: ClassVar[List[str]] = ["call_id", "callee_id_name", "callee_id_number", "caller_id_name", "caller_id_number", "cdr_id", "content_type", "custom_channel_vars", "description", "direction", "duration", "duration_ms", "endpoint_id", "from", "id", "interaction_id", "media_source", "media_type", "name", "origin", "owner_id", "request", "source_type", "start", "to", "url"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of ServiceCallRecordingOutput from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of ServiceCallRecordingOutput from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "call_id": obj.get("call_id"),
            "callee_id_name": obj.get("callee_id_name"),
            "callee_id_number": obj.get("callee_id_number"),
            "caller_id_name": obj.get("caller_id_name"),
            "caller_id_number": obj.get("caller_id_number"),
            "cdr_id": obj.get("cdr_id"),
            "content_type": obj.get("content_type"),
            "custom_channel_vars": obj.get("custom_channel_vars"),
            "description": obj.get("description"),
            "direction": obj.get("direction"),
            "duration": obj.get("duration"),
            "duration_ms": obj.get("duration_ms"),
            "endpoint_id": obj.get("endpoint_id"),
            "from": obj.get("from"),
            "id": obj.get("id"),
            "interaction_id": obj.get("interaction_id"),
            "media_source": obj.get("media_source"),
            "media_type": obj.get("media_type"),
            "name": obj.get("name"),
            "origin": obj.get("origin"),
            "owner_id": obj.get("owner_id"),
            "request": obj.get("request"),
            "source_type": obj.get("source_type"),
            "start": obj.get("start"),
            "to": obj.get("to"),
            "url": obj.get("url")
        })
        return _obj


