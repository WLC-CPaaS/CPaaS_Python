# coding: utf-8

"""
    White Label Communications CPaas API Documentation

    A CPaaS platform API

    The version of the OpenAPI document: 1.1
    Contact: support@whitelabelcomm.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.provisioning_docs_docs_family_output_single import ProvisioningDocsDocsFamilyOutputSingle

class TestProvisioningDocsDocsFamilyOutputSingle(unittest.TestCase):
    """ProvisioningDocsDocsFamilyOutputSingle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProvisioningDocsDocsFamilyOutputSingle:
        """Test ProvisioningDocsDocsFamilyOutputSingle
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProvisioningDocsDocsFamilyOutputSingle`
        """
        model = ProvisioningDocsDocsFamilyOutputSingle()
        if include_optional:
            return ProvisioningDocsDocsFamilyOutputSingle(
                data = openapi_client.models.models/family.models.Family(
                    brand_name = '', 
                    created_at = '', 
                    family_name = '', 
                    id = '', 
                    is_active = True, 
                    timezone_format_id = 56, 
                    updated_at = '', ),
                request_id = '',
                status_code = 56
            )
        else:
            return ProvisioningDocsDocsFamilyOutputSingle(
        )
        """

    def testProvisioningDocsDocsFamilyOutputSingle(self):
        """Test ProvisioningDocsDocsFamilyOutputSingle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
