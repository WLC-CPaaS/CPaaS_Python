# coding: utf-8

"""
    White Label Communications CPaas API Documentation

    A CPaaS platform API

    The version of the OpenAPI document: 1.1
    Contact: support@whitelabelcomm.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_docs_callflow_get_single import ServiceDocsCallflowGetSingle

class TestServiceDocsCallflowGetSingle(unittest.TestCase):
    """ServiceDocsCallflowGetSingle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceDocsCallflowGetSingle:
        """Test ServiceDocsCallflowGetSingle
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceDocsCallflowGetSingle`
        """
        model = ServiceDocsCallflowGetSingle()
        if include_optional:
            return ServiceDocsCallflowGetSingle(
                data = openapi_client.models.service/callflow_output_full.service.CallflowOutputFull(
                    featurecode = openapi_client.models.service/feature_code.service.FeatureCode(
                        name = '', 
                        number = '', ), 
                    flow = openapi_client.models.service/callflow_add_edit_flow_data.service.CallflowAddEditFlowData(
                        children = {
                            'key' : openapi_client.models.service/callflow_add_edit_flow_data.service.CallflowAddEditFlowData(
                                data = { }, 
                                module = 'device', )
                            }, 
                        data = { }, 
                        module = 'device', ), 
                    id = '', 
                    name = '', 
                    numbers = [
                        ''
                        ], 
                    patterns = [
                        ''
                        ], ),
                request_id = '',
                status_code = 56
            )
        else:
            return ServiceDocsCallflowGetSingle(
        )
        """

    def testServiceDocsCallflowGetSingle(self):
        """Test ServiceDocsCallflowGetSingle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
