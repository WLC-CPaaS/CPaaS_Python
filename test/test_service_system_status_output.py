# coding: utf-8

"""
    White Label Communications CPaas API Documentation

    A CPaaS platform API

    The version of the OpenAPI document: 1.1
    Contact: support@whitelabelcomm.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_system_status_output import ServiceSystemStatusOutput

class TestServiceSystemStatusOutput(unittest.TestCase):
    """ServiceSystemStatusOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceSystemStatusOutput:
        """Test ServiceSystemStatusOutput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceSystemStatusOutput`
        """
        model = ServiceSystemStatusOutput()
        if include_optional:
            return ServiceSystemStatusOutput(
                cpaas_services = openapi_client.models.service/system_status_cpaas_service.service.SystemStatusCPAASService(
                    backend = '', 
                    portal = '', 
                    server = '', ),
                messaging_services = openapi_client.models.service/system_status_messaging_service.service.SystemStatusMessagingService(
                    messaging_server = '', ),
                support_services = openapi_client.models.service/system_status_support_service.service.SystemStatusSupportService(
                    e911_server = '', 
                    phone_number_server = '', ),
                voip_services = openapi_client.models.service/system_status_voip_service.service.SystemStatusVOIPService(
                    apps = '', 
                    backend = '', 
                    call_manager = '', 
                    media_server = '', 
                    message_broker = '', 
                    sip_proxy = '', )
            )
        else:
            return ServiceSystemStatusOutput(
        )
        """

    def testServiceSystemStatusOutput(self):
        """Test ServiceSystemStatusOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
