# coding: utf-8

"""
    White Label Communications CPaas API Documentation

    A CPaaS platform API

    The version of the OpenAPI document: 1.1
    Contact: support@whitelabelcomm.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_campaign_import_output import ServiceCampaignImportOutput

class TestServiceCampaignImportOutput(unittest.TestCase):
    """ServiceCampaignImportOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceCampaignImportOutput:
        """Test ServiceCampaignImportOutput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceCampaignImportOutput`
        """
        model = ServiceCampaignImportOutput()
        if include_optional:
            return ServiceCampaignImportOutput(
                campaign_id = '',
                created_date = '',
                description = '',
                message_class = '',
                mno_status_list = [
                    openapi_client.models.service_campaign_import_output_mno_status_list_inner.service_CampaignImportOutput_mno_status_list_inner(
                        mno_id = '', 
                        mno_name = '', 
                        status = '', )
                    ],
                secondary_dca_sharing_status = '',
                status = ''
            )
        else:
            return ServiceCampaignImportOutput(
        )
        """

    def testServiceCampaignImportOutput(self):
        """Test ServiceCampaignImportOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
