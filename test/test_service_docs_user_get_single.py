# coding: utf-8

"""
    White Label Communications CPaas API Documentation

    A CPaaS platform API

    The version of the OpenAPI document: 1.1
    Contact: support@whitelabelcomm.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_docs_user_get_single import ServiceDocsUserGetSingle

class TestServiceDocsUserGetSingle(unittest.TestCase):
    """ServiceDocsUserGetSingle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceDocsUserGetSingle:
        """Test ServiceDocsUserGetSingle
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceDocsUserGetSingle`
        """
        model = ServiceDocsUserGetSingle()
        if include_optional:
            return ServiceDocsUserGetSingle(
                data = openapi_client.models.service/user_output_full.service.UserOutputFull(
                    call_forward = openapi_client.models.service/call_forward.service.CallForward(
                        enabled = True, 
                        number = '', ), 
                    call_recording = openapi_client.models.service/call_recording_settings.service.CallRecordingSettings(
                        any = openapi_client.models.service/call_recording_source.service.CallRecordingSource(
                            offnet = openapi_client.models.service/call_recording_parameters.service.CallRecordingParameters(
                                enabled = True, 
                                format = 'mp3', 
                                record_min_sec = 56, 
                                record_on_answer = True, 
                                record_on_bridge = True, 
                                record_sample_rate = 56, 
                                time_limit = 5, 
                                url = '', ), 
                            onnet = openapi_client.models.service/call_recording_parameters.service.CallRecordingParameters(
                                enabled = True, 
                                format = 'mp3', 
                                record_min_sec = 56, 
                                record_on_answer = True, 
                                record_on_bridge = True, 
                                record_sample_rate = 56, 
                                time_limit = 5, 
                                url = '', ), ), 
                        inbound = openapi_client.models.service/call_recording_source.service.CallRecordingSource(), 
                        outbound = , ), 
                    do_not_disturb = openapi_client.models.service/voip_shared_do_not_disturb.service.VOIPSharedDoNotDisturb(
                        enabled = True, ), 
                    email = '', 
                    enabled = True, 
                    first_name = '', 
                    id = '', 
                    last_name = '', 
                    music_on_hold = openapi_client.models.service/music_on_hold.service.MusicOnHold(
                        media_id = '', ), 
                    presence_id = '', 
                    timezone = '', 
                    verified = True, ),
                request_id = '',
                status_code = 56
            )
        else:
            return ServiceDocsUserGetSingle(
        )
        """

    def testServiceDocsUserGetSingle(self):
        """Test ServiceDocsUserGetSingle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
