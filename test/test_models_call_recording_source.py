# coding: utf-8

"""
    White Label Communications CPaas API Documentation

    A CPaaS platform API

    The version of the OpenAPI document: 1.1
    Contact: support@whitelabelcomm.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.models_call_recording_source import ModelsCallRecordingSource

class TestModelsCallRecordingSource(unittest.TestCase):
    """ModelsCallRecordingSource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelsCallRecordingSource:
        """Test ModelsCallRecordingSource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelsCallRecordingSource`
        """
        model = ModelsCallRecordingSource()
        if include_optional:
            return ModelsCallRecordingSource(
                any = openapi_client.models.models/call_recording_parameters.models.CallRecordingParameters(
                    enabled = True, 
                    format = 'mp3', 
                    record_min_sec = 56, 
                    record_on_answer = True, 
                    record_on_bridge = True, 
                    record_sample_rate = 56, 
                    time_limit = 5, 
                    url = '', ),
                offnet = openapi_client.models.models/call_recording_parameters.models.CallRecordingParameters(
                    enabled = True, 
                    format = 'mp3', 
                    record_min_sec = 56, 
                    record_on_answer = True, 
                    record_on_bridge = True, 
                    record_sample_rate = 56, 
                    time_limit = 5, 
                    url = '', ),
                onnet = openapi_client.models.models/call_recording_parameters.models.CallRecordingParameters(
                    enabled = True, 
                    format = 'mp3', 
                    record_min_sec = 56, 
                    record_on_answer = True, 
                    record_on_bridge = True, 
                    record_sample_rate = 56, 
                    time_limit = 5, 
                    url = '', )
            )
        else:
            return ModelsCallRecordingSource(
        )
        """

    def testModelsCallRecordingSource(self):
        """Test ModelsCallRecordingSource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
