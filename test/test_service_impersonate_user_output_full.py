# coding: utf-8

"""
    White Label Communications CPaas API Documentation

    A CPaaS platform API

    The version of the OpenAPI document: 1.1
    Contact: support@whitelabelcomm.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_impersonate_user_output_full import ServiceImpersonateUserOutputFull

class TestServiceImpersonateUserOutputFull(unittest.TestCase):
    """ServiceImpersonateUserOutputFull unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceImpersonateUserOutputFull:
        """Test ServiceImpersonateUserOutputFull
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceImpersonateUserOutputFull`
        """
        model = ServiceImpersonateUserOutputFull()
        if include_optional:
            return ServiceImpersonateUserOutputFull(
                account_id = '',
                account_name = '',
                auth_token = '',
                cluster_id = '',
                is_master_account = True,
                is_reseller = True,
                owner_id = '',
                reseller_id = '',
                user_info = openapi_client.models.service/impersonated_user_info.service.ImpersonatedUserInfo(
                    email = '', 
                    first_name = '', 
                    full_name = '', 
                    has_avatar = True, 
                    last_name = '', 
                    priv_level = '', )
            )
        else:
            return ServiceImpersonateUserOutputFull(
        )
        """

    def testServiceImpersonateUserOutputFull(self):
        """Test ServiceImpersonateUserOutputFull"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
